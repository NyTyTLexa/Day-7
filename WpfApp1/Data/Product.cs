//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан по шаблону.
//
//     Изменения, вносимые в этот файл вручную, могут привести к непредвиденной работе приложения.
//     Изменения, вносимые в этот файл вручную, будут перезаписаны при повторном создании кода.
// </auto-generated>
//------------------------------------------------------------------------------

namespace WpfApp1.Data
{
    using System;
    using System.Collections.Generic;
    using System.IO;
    using System.Windows.Controls;
    using System.Windows.Media;
    using System.Windows.Media.Imaging;

    public partial class Product
    {
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2214:DoNotCallOverridableMethodsInConstructors")]
        public Product()
        {
            this.Order = new HashSet<Order>();
        }
    
        public string ProductArticleNumber { get; set; }
        public string ProductName { get; set; }
        public string ProductDescription { get; set; }
        public int ProductCategory { get; set; }
        public string ProductPhotoPath { get; set; }
        public byte[] ProductPhoto { get; set; }
        public int ProductManufacturer { get; set; }
        public string Manufacturer { get { return manufactory.Name; } set { value = manufactory.Name; } }
        public double ProductCost { get; set; }
        public Nullable<int> ProductDiscountAmount { get; set; }
        public int ProductQuantityInStock { get; set; }
        public int ProductUnity { get; set; }
        public Nullable<int> MaxSale { get; set; }
        public Nullable<int> Suplier { get; set; }
    
        public BitmapImage PictureProduct { get { if (File.Exists(Environment.CurrentDirectory + @"\Picture\" + ProductPhotoPath))
                    return new BitmapImage(new Uri(Environment.CurrentDirectory + @"\Picture\" + ProductPhotoPath));
                else
                    return new BitmapImage(new Uri(Environment.CurrentDirectory + @"\Picture\" + "picture.png"));
            } }

        public string IsProduct { get { if (ProductQuantityInStock != null) { return $"Наличие {ProductQuantityInStock}";   } else { return "Нет в наличии"; } } }
        public Brush ColorProduct { get { if (ProductQuantityInStock != null) { return Brushes.Transparent; } else { return Brushes.Gray; } } }
        public virtual Category Category { get; set; }
        public virtual manufactory manufactory { get; set; }
        public virtual Suplier Suplier1 { get; set; }
        public virtual Unit Unit { get; set; }
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<Order> Order { get; set; }
    }
}
